name: Extract and Publish Ant Design Docs

on:
  schedule:
    - cron: '0 0 * * 1' # 每周一午夜运行
  workflow_dispatch: # 允许手动触发
  push:
    branches:
      - test-extract-antd-ci

jobs:
  extract-and-publish:
    runs-on: ubuntu-latest
    container:
      image: node:22-slim # 使用更轻量级的 Node.js 镜像
    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 1  # 只克隆最近一次commit

      - name: Setup npm
        run: |
          npm config set registry 'https://registry.npmmirror.com/'

      - name: Clone Ant Design
        run: |
          apt-get install -y git
          git clone https://github.com/ant-design/ant-design.git --depth 1 --branch master --single-branch --filter=blob:none

      - name: Get Ant Design Version
        id: get_version
        run: |
          cd ant-design
          echo "antd_version=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV

      - name: Get Extracted Data Version
        id: get_extracted_version
        run: |
          echo "extracted_antd_version=$(node -p \"require('./componentData/metadata.json').antdVersion\")" >> $GITHUB_ENV

      - name: Check for Updates
        id: check_updates
        run: |
          if [ "$antd_version" != "$extracted_antd_version" ]; then
            echo "update_needed=true" >> $GITHUB_ENV
          else
            echo "update_needed=false" >> $GITHUB_ENV

      - name: Generate Changelog
        if: env.update_needed == 'true'
        working-directory: ./ant-design
        run: |
          npm ci --registry=https://registry.npmmirror.com/
          npm run lint:changelog

      - name: Extract Docs
        if: env.update_needed == 'true'
        run: |
          npm ci --registry=https://registry.npmmirror.com/
          npm run extract ../ant-design

      - name: Commit and Push Changes
        if: env.update_needed == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Update extracted docs"

      - name: Publish Package
        if: env.update_needed == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm version patch --no-git-tag-version
          npm publish --access public
          git push origin master